{
  "openapi": "3.0.2",
  "info": {
    "title": "OpenAtlas API",
    "description": "An API that allows user to access data from an OpenAtlas instance.",
    "contact": {
      "name": "OpenAtlas",
      "url": "https://openatlas.eu",
      "email": "bernhard.koschicek-krombholz@oeaw.ac.at"
    },
    "license": {
      "name": "GPL-2.0",
      "url": "https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html"
    },
    "version": "0.4.1"
  },
  "externalDocs": {
    "description": "OpenAtlas Manual",
    "url": "https://manual.openatlas.eu/"
  },
  "servers": [
    {
      "url": "https://demo.openatlas.eu/api/{version}",
      "description": "Demo Server",
      "variables": {
        "version": {
          "default": "0.3",
          "enum": ["0.3"]
        }
      }
    },
    {
      "url": "https://demo-dev.openatlas.eu/api/{version}",
      "description": "Demo Dev Server",
      "variables": {
        "version": {
          "default": "0.3",
          "enum": ["0.3"]
        }
      }
    },
    {
      "url": "http://localhost:5000/api/{version}",
      "description": "Used directly in an OpenAtlas instance",
      "variables": {
        "version": {
          "default": "0.3",
          "enum": ["0.3"]
        }
      }
    }
  ],
  "tags": [
    {
      "name": "Entity Endpoint",
      "description": "Endpoint provide information about one entity in the OpenAtlas instance. The requested information is provided in Linked Places format (LPF). Alternatively, GeoJSON or RDFs, derived from the LPF data, can be accessed."
    },
    {
      "name": "Entity Query Endpoint",
      "description": "Endpoint provide information about one entity in the OpenAtlas instance. The requested information is provided in Linked Places format (LPF). Alternatively, GeoJSON or RDFs, derived from the LPF data, can be accessed. Combine several or all entities endpoints in one query."
    },
    {
      "name": "Entities Endpoint",
      "description": "Endpoints provide information about entities in the OpenAtlas instance. The requested information is provided in Linked Places format (LPF). Alternatively, GeoJSON or RDFs, derived from the LPF data, can be accessed."
    },
    {
      "name": "Type Endpoints",
      "description": "Provide information about Types of an OpenAtlas instance. The results are in JSON and in a custom format."
    },
    {
      "name": "Administrative Endpoints",
      "description": "Provide metadata of the OpenAtlas instance for presentation sites."
    },
    {
      "name": "Special Endpoints",
      "description": "Provides project-specific formats."
    },
    {
      "name": "Image Endpoints",
      "description": "Provides image files"
    }
  ],
  "paths": {
    "/entity/{entityId}": {
      "get": {
        "tags": ["Entity Endpoint"],
        "summary": "Get entity by ID",
        "description": "Retrieves all information about a single entity",
        "operationId": "GetEntity",
        "parameters": [
          {
            "name": "entityId",
            "in": "path",
            "description": "Specific entity ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            },
            "example": 40
          },
          {
            "name": "download",
            "in": "query",
            "description": "Download results",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "show",
            "in": "query",
            "description": "Select which keys should not be displayed. This can improve performance",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "when",
                  "types",
                  "relations",
                  "names",
                  "links",
                  "geometry",
                  "depictions",
                  "geonames",
                  "description",
                  "none"
                ]
              }
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Choose the format for the results.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "lp",
                "geojson",
                "geojson-v2",
                "pretty-xml",
                "n3",
                "turtle",
                "nt",
                "xml"
              ]
            },
            "example": "lp"
          },
          {
            "name": "export",
            "in": "query",
            "description": "Export the entities into either a simple CSV representation or a zip file of CSV's especially designed for network analyses.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": ["csv", "csvNetwork"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "/entity response",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "404": {
            "description": "Something went wrong. Please consult the error message."
          }
        }
      }
    },
    "/query/": {
      "get": {
        "tags": ["Entities Endpoint", "Entity Query Endpoint"],
        "summary": "Combine several or all entities endpoints in one query",
        "description": "Retrieves a list with entity ID, CIDOC CRM code, system class, or menu item. Combine up to four of the Entities Endpoints in a single query. Each request has to be a new parameter.",
        "operationId": "GetQuery",
        "parameters": [
          {
            "name": "entities",
            "in": "query",
            "description": "Entity ids which will be requested",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "view_classes",
            "in": "query",
            "description": "View classes to be requested",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "all",
                  "actor",
                  "artifact",
                  "event",
                  "place",
                  "reference",
                  "source",
                  "artifact",
                  "type",
                  "file",
                  "source_translation",
                  "reference_system"
                ]
              }
            },
            "example": "actor"
          },
          {
            "name": "system_classes",
            "in": "query",
            "description": "System classes to be requested",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "all",
                  "acquisition",
                  "activity",
                  "administrative_unit",
                  "appellation",
                  "artifact",
                  "bibliography",
                  "edition",
                  "event",
                  "external_reference",
                  "feature",
                  "file",
                  "group",
                  "human_remains",
                  "move",
                  "object_location",
                  "person",
                  "place",
                  "production",
                  "reference_system",
                  "source",
                  "source_translation",
                  "stratigraphic_unit",
                  "type",
                  "type_anthropology"
                ]
              }
            }
          },
          {
            "name": "cidoc_classes",
            "in": "query",
            "description": "CIDOC classes to be requested",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "E6",
                  "E7",
                  "E8",
                  "E9",
                  "E12",
                  "E18",
                  "E20",
                  "E21",
                  "E22",
                  "E31",
                  "E32",
                  "E33",
                  "E41",
                  "E53",
                  "E54",
                  "E55",
                  "E74"
                ]
              }
            },
            "example": "E18"
          },
          {
            "name": "download",
            "in": "query",
            "description": "Download results",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Just show count of how many entities would the result give back",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "show",
            "in": "query",
            "description": "Select which keys should not be displayed. This can improve performance",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "when",
                  "types",
                  "relations",
                  "names",
                  "links",
                  "geometry",
                  "depictions",
                  "geonames",
                  "description",
                  "none"
                ]
              }
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Choose the format for the results.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "lp",
                "geojson",
                "geojson-v2",
                "pretty-xml",
                "n3",
                "turtle",
                "nt",
                "xml"
              ]
            },
            "example": "lp"
          },
          {
            "name": "export",
            "in": "query",
            "description": "Export the entities into either a simple CSV representation or a zip file of CSV's especially designed for network analyses.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": ["csv", "csvNetwork"]
            }
          },
          {
            "name": "column",
            "in": "query",
            "description": "Choose one column to sort the results by. Default value is name.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "name",
                "cidoc_class",
                "system_class",
                "begin_from",
                "begin_to",
                "end_from",
                "end_to"
              ]
            },
            "example": "name"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting result ascending or descending of the given column. Default value is asc.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "example": "asc"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search query for specific results.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "first",
            "in": "query",
            "description": "Begin results at the given entity id.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "last",
            "in": "query",
            "description": "Begin results after the given entity id.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Jump to page number.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limits the entities displayed. Influences the performance of the request. Default value is 20. 0 means all available entities will be displayed.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "type_id",
            "in": "query",
            "description": "Show only entities with the given type id.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "relation_type",
            "in": "query",
            "description": "Displays only connections connected by the selected CIDOC CRM code.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Results of query",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntitiesOutputModel"
                }
              }
            }
          },
          "404": {
            "description": "Something went wrong. Please consult the error message."
          }
        }
      }
    },
    "/system_class/{system_class}": {
      "get": {
        "tags": ["Entities Endpoint"],
        "description": "Retrieves a list of entities, based on their OpenAtlas class name.",
        "operationId": "GetBySystemClass",
        "parameters": [
          {
            "name": "system_class",
            "in": "path",
            "description": "System class to be requested",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "acquisition",
                "activity",
                "administrative_unit",
                "appellation",
                "artifact",
                "bibliography",
                "edition",
                "event",
                "external_reference",
                "feature",
                "file",
                "group",
                "human_remains",
                "move",
                "object_location",
                "person",
                "place",
                "production",
                "reference_system",
                "source",
                "source_translation",
                "stratigraphic_unit",
                "type",
                "type_anthropology"
              ]
            },
            "example": "acquisition"
          },
          {
            "name": "download",
            "in": "query",
            "description": "Download results",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Just show count of how many entities would the result give back",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "show",
            "in": "query",
            "description": "Select which keys should not be displayed. This can improve performance",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "when",
                  "types",
                  "relations",
                  "names",
                  "links",
                  "geometry",
                  "depictions",
                  "geonames",
                  "description",
                  "none"
                ]
              }
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Choose the format for the results.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "lp",
                "geojson",
                "geojson-v2",
                "pretty-xml",
                "n3",
                "turtle",
                "nt",
                "xml"
              ]
            },
            "example": "lp"
          },
          {
            "name": "export",
            "in": "query",
            "description": "Export the entities into either a simple CSV representation or a zip file of CSV's especially designed for network analyses.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": ["csv", "csvNetwork"]
            }
          },
          {
            "name": "column",
            "in": "query",
            "description": "Choose one column to sort the results by. Default value is name.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "name",
                "cidoc_class",
                "system_class",
                "begin_from",
                "begin_to",
                "end_from",
                "end_to"
              ]
            },
            "example": "name"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting result ascending or descending of the given column. Default value is asc.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "example": "asc"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search query for specific results.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "first",
            "in": "query",
            "description": "Begin results at the given entity id.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "last",
            "in": "query",
            "description": "Begin results after the given entity id.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Jump to page number.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limits the entities displayed. Influences the performance of the request. Default value is 20. 0 means all available entities will be displayed.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "type_id",
            "in": "query",
            "description": "Show only entities with the given type id.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "relation_type",
            "in": "query",
            "description": "Displays only connections connected by the selected CIDOC CRM code.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Results of system class",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntitiesOutputModel"
                }
              }
            }
          },
          "404": {
            "description": "Something went wrong. Please consult the error message."
          }
        }
      }
    },
    "/view_class/{view_class}": {
      "get": {
        "tags": ["Entities Endpoint"],
        "description": "Retrieves a list of entities based on their OpenAtlas menu items.",
        "operationId": "GetByViewClass",
        "parameters": [
          {
            "name": "view_class",
            "in": "path",
            "description": "View class to be requested",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "actor",
                "artifact",
                "event",
                "place",
                "reference",
                "source",
                "artifact",
                "type",
                "file",
                "source_translation",
                "reference_system"
              ]
            },
            "example": "actor"
          },
          {
            "name": "download",
            "in": "query",
            "description": "Download results",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Just show count of how many entities would the result give back",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "show",
            "in": "query",
            "description": "Select which keys should not be displayed. This can improve performance",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "when",
                  "types",
                  "relations",
                  "names",
                  "links",
                  "geometry",
                  "depictions",
                  "geonames",
                  "description",
                  "none"
                ]
              }
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Choose the format for the results.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "lp",
                "geojson",
                "geojson-v2",
                "pretty-xml",
                "n3",
                "turtle",
                "nt",
                "xml"
              ]
            },
            "example": "lp"
          },
          {
            "name": "export",
            "in": "query",
            "description": "Export the entities into either a simple CSV representation or a zip file of CSV's especially designed for network analyses.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": ["csv", "csvNetwork"]
            }
          },
          {
            "name": "column",
            "in": "query",
            "description": "Choose one column to sort the results by. Default value is name.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "name",
                "cidoc_class",
                "system_class",
                "begin_from",
                "begin_to",
                "end_from",
                "end_to"
              ]
            },
            "example": "name"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting result ascending or descending of the given column. Default value is asc.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "example": "asc"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search query for specific results.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "first",
            "in": "query",
            "description": "Begin results at the given entity id.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "last",
            "in": "query",
            "description": "Begin results after the given entity id.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Jump to page number.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limits the entities displayed. Influences the performance of the request. Default value is 20. 0 means all available entities will be displayed.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "type_id",
            "in": "query",
            "description": "Show only entities with the given type id.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "relation_type",
            "in": "query",
            "description": "Displays only connections connected by the selected CIDOC CRM code.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Results of view class",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntitiesOutputModel"
                }
              }
            }
          },
          "404": {
            "description": "Something went wrong. Please consult the error message."
          }
        }
      }
    },
    "/cidoc_class/{cidoc_class}": {
      "get": {
        "tags": ["Entities Endpoint"],
        "description": "Retrieve a list of entities, based on their CIDOC CRM class code.",
        "operationId": "GetByCidocClass",
        "parameters": [
          {
            "name": "cidoc_class",
            "in": "path",
            "description": "CIDOC class to be requested",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "enum": [
                "E6",
                "E7",
                "E8",
                "E9",
                "E12",
                "E18",
                "E20",
                "E21",
                "E22",
                "E31",
                "E32",
                "E33",
                "E41",
                "E53",
                "E54",
                "E55",
                "E74"
              ]
            },
            "example": "E18"
          },
          {
            "name": "download",
            "in": "query",
            "description": "Download results",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Just show count of how many entities would the result give back",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "show",
            "in": "query",
            "description": "Select which keys should not be displayed. This can improve performance",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "when",
                  "types",
                  "relations",
                  "names",
                  "links",
                  "geometry",
                  "depictions",
                  "geonames",
                  "description",
                  "none"
                ]
              }
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Choose the format for the results.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "lp",
                "geojson",
                "geojson-v2",
                "pretty-xml",
                "n3",
                "turtle",
                "nt",
                "xml"
              ]
            },
            "example": "lp"
          },
          {
            "name": "export",
            "in": "query",
            "description": "Export the entities into either a simple CSV representation or a zip file of CSV's especially designed for network analyses.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": ["csv", "csvNetwork"]
            }
          },
          {
            "name": "column",
            "in": "query",
            "description": "Choose one column to sort the results by. Default value is name.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "name",
                "cidoc_class",
                "system_class",
                "begin_from",
                "begin_to",
                "end_from",
                "end_to"
              ]
            },
            "example": "name"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting result ascending or descending of the given column. Default value is asc.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "example": "asc"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search query for specific results.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "first",
            "in": "query",
            "description": "Begin results at the given entity id.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "last",
            "in": "query",
            "description": "Begin results after the given entity id.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Jump to page number.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limits the entities displayed. Influences the performance of the request. Default value is 20. 0 means all available entities will be displayed.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "type_id",
            "in": "query",
            "description": "Show only entities with the given type id.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "relation_type",
            "in": "query",
            "description": "Displays only connections connected by the selected CIDOC CRM code.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Results of CIDOC class",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntitiesOutputModel"
                }
              }
            }
          },
          "404": {
            "description": "Something went wrong. Please consult the error message."
          }
        }
      }
    },
    "/latest/{limit}": {
      "get": {
        "tags": ["Entities Endpoint"],
        "description": "Retrieve the last entered entities. n represents the amount of entities retrieved (between 1 and 100). The pagination information is always null.",
        "operationId": "GetLatest",
        "parameters": [
          {
            "name": "limit",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "name": "download",
            "in": "query",
            "description": "Download results",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "show",
            "in": "query",
            "description": "Select which keys should not be displayed. This can improve performance",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "when",
                  "types",
                  "relations",
                  "names",
                  "links",
                  "geometry",
                  "depictions",
                  "geonames",
                  "description",
                  "none"
                ]
              }
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Choose the format for the results.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "lp",
                "geojson",
                "geojson-v2",
                "pretty-xml",
                "n3",
                "turtle",
                "nt",
                "xml"
              ]
            },
            "example": "lp"
          },
          {
            "name": "export",
            "in": "query",
            "description": "Export the entities into either a simple CSV representation or a zip file of CSV's especially designed for network analyses.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": ["csv", "csvNetwork"]
            }
          },
          {
            "name": "column",
            "in": "query",
            "description": "Choose one column to sort the results by. Default value is name.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "name",
                "cidoc_class",
                "system_class",
                "begin_from",
                "begin_to",
                "end_from",
                "end_to"
              ]
            },
            "example": "name"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting result ascending or descending of the given column. Default value is asc.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "example": "asc"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search query for specific results.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "type_id",
            "in": "query",
            "description": "Show only entities with the given type id.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "relation_type",
            "in": "query",
            "description": "Displays only connections connected by the selected CIDOC CRM code.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Last entered entities.",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntitiesOutputModel"
                }
              }
            }
          },
          "404": {
            "description": "Something went wrong. Please consult the error message."
          }
        }
      }
    },
    "/type_entities/{entityId}": {
      "get": {
        "tags": ["Entities Endpoint"],
        "description": "Used to retrieve a list of entities, based on their OpenAtlas type ID. For an endpoint that lists all available types click confer Types Endpoints",
        "operationId": "GetTypeEntities",
        "parameters": [
          {
            "name": "entityId",
            "in": "path",
            "description": "Specific entity ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            },
            "example": 40
          },
          {
            "name": "download",
            "in": "query",
            "description": "Download results",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Just show count of how many entities would the result give back",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "show",
            "in": "query",
            "description": "Select which keys should not be displayed. This can improve performance",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "when",
                  "types",
                  "relations",
                  "names",
                  "links",
                  "geometry",
                  "depictions",
                  "geonames",
                  "description",
                  "none"
                ]
              }
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Choose the format for the results.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "lp",
                "geojson",
                "geojson-v2",
                "pretty-xml",
                "n3",
                "turtle",
                "nt",
                "xml"
              ]
            },
            "example": "lp"
          },
          {
            "name": "export",
            "in": "query",
            "description": "Export the entities into either a simple CSV representation or a zip file of CSV's especially designed for network analyses.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": ["csv", "csvNetwork"]
            }
          },
          {
            "name": "column",
            "in": "query",
            "description": "Choose one column to sort the results by. Default value is name.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "name",
                "cidoc_class",
                "system_class",
                "begin_from",
                "begin_to",
                "end_from",
                "end_to"
              ]
            },
            "example": "name"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting result ascending or descending of the given column. Default value is asc.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "example": "asc"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search query for specific results.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "first",
            "in": "query",
            "description": "Begin results at the given entity id.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "last",
            "in": "query",
            "description": "Begin results after the given entity id.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Jump to page number.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limits the entities displayed. Influences the performance of the request. Default value is 20. 0 means all available entities will be displayed.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "type_id",
            "in": "query",
            "description": "Show only entities with the given type id.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "relation_type",
            "in": "query",
            "description": "Displays only connections connected by the selected CIDOC CRM code.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Results of type entities",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntitiesOutputModel"
                }
              }
            }
          },
          "404": {
            "description": "Something went wrong. Please consult the error message."
          }
        }
      }
    },
    "/type_entities_all/{entityId}": {
      "get": {
        "tags": ["Entities Endpoint"],
        "description": "Used to retrieve a list of entities, based on their OpenAtlas type ID including all connected subtypes.. For an endpoint that lists all available types click confer Type Endpoints",
        "operationId": "GetTypeEntitiesAll",
        "parameters": [
          {
            "name": "entityId",
            "in": "path",
            "description": "Specific entity ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            },
            "example": 40
          },
          {
            "name": "download",
            "in": "query",
            "description": "Download results",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Just show count of how many entities would the result give back",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "show",
            "in": "query",
            "description": "Select which keys should not be displayed. This can improve performance",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "when",
                  "types",
                  "relations",
                  "names",
                  "links",
                  "geometry",
                  "depictions",
                  "geonames",
                  "description",
                  "none"
                ]
              }
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Choose the format for the results.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "lp",
                "geojson",
                "geojson-v2",
                "pretty-xml",
                "n3",
                "turtle",
                "nt",
                "xml"
              ]
            },
            "example": "lp"
          },
          {
            "name": "export",
            "in": "query",
            "description": "Export the entities into either a simple CSV representation or a zip file of CSV's especially designed for network analyses.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": ["csv", "csvNetwork"]
            }
          },
          {
            "name": "column",
            "in": "query",
            "description": "Choose one column to sort the results by. Default value is name.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "name",
                "cidoc_class",
                "system_class",
                "begin_from",
                "begin_to",
                "end_from",
                "end_to"
              ]
            },
            "example": "name"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting result ascending or descending of the given column. Default value is asc.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "example": "asc"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search query for specific results.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "first",
            "in": "query",
            "description": "Begin results at the given entity id.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "last",
            "in": "query",
            "description": "Begin results after the given entity id.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Jump to page number.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limits the entities displayed. Influences the performance of the request. Default value is 20. 0 means all available entities will be displayed.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "type_id",
            "in": "query",
            "description": "Show only entities with the given type id.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "relation_type",
            "in": "query",
            "description": "Displays only connections connected by the selected CIDOC CRM code.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Results of type entities all",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntitiesOutputModel"
                }
              }
            }
          },
          "404": {
            "description": "Something went wrong. Please consult the error message."
          }
        }
      }
    },
    "/entities_linked_to_entity/{entityId}": {
      "get": {
        "tags": ["Entities Endpoint"],
        "description": "Retrieves a list of entities linked to the entity with the stated ID.",
        "operationId": "GetEntitiesLinkedToEntity",
        "parameters": [
          {
            "name": "entityId",
            "in": "path",
            "description": "Specific entity ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            },
            "example": 40
          },
          {
            "name": "download",
            "in": "query",
            "description": "Download results",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Just show count of how many entities would the result give back",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "show",
            "in": "query",
            "description": "Select which keys should not be displayed. This can improve performance",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "when",
                  "types",
                  "relations",
                  "names",
                  "links",
                  "geometry",
                  "depictions",
                  "geonames",
                  "description",
                  "none"
                ]
              }
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Choose the format for the results.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "lp",
                "geojson",
                "geojson-v2",
                "pretty-xml",
                "n3",
                "turtle",
                "nt",
                "xml"
              ]
            },
            "example": "lp"
          },
          {
            "name": "export",
            "in": "query",
            "description": "Export the entities into either a simple CSV representation or a zip file of CSV's especially designed for network analyses.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": ["csv", "csvNetwork"]
            }
          },
          {
            "name": "column",
            "in": "query",
            "description": "Choose one column to sort the results by. Default value is name.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "name",
                "cidoc_class",
                "system_class",
                "begin_from",
                "begin_to",
                "end_from",
                "end_to"
              ]
            },
            "example": "name"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting result ascending or descending of the given column. Default value is asc.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "example": "asc"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search query for specific results.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "first",
            "in": "query",
            "description": "Begin results at the given entity id.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "last",
            "in": "query",
            "description": "Begin results after the given entity id.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Jump to page number.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limits the entities displayed. Influences the performance of the request. Default value is 20. 0 means all available entities will be displayed.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "type_id",
            "in": "query",
            "description": "Show only entities with the given type id.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "relation_type",
            "in": "query",
            "description": "Displays only connections connected by the selected CIDOC CRM code.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Results of entities linked to entity",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntitiesOutputModel"
                }
              }
            }
          },
          "404": {
            "description": "Something went wrong. Please consult the error message."
          }
        }
      }
    },
    "/type_overview/": {
      "get": {
        "tags": ["Type Endpoints"],
        "description": "Retrieves a list of all OpenAtlas types sorted by custom, places, standard and value",
        "operationId": "GetTypeOverview",
        "parameters": [
          {
            "name": "download",
            "in": "query",
            "description": "Download results",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of all OpenAtlas types",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TypeOverviewModel"
                }
              }
            }
          },
          "404": {
            "description": "Something went wrong. Please consult the error message."
          }
        }
      }
    },
    "/type_tree/": {
      "get": {
        "tags": ["Type Endpoints"],
        "description": "Retrieves a list of all OpenAtlas types, including their information sorted by their IDs",
        "operationId": "GetTypeTree",
        "parameters": [
          {
            "name": "download",
            "in": "query",
            "description": "Download results",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of all OpenAtlas types",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TypeTreeModel"
                }
              }
            }
          },
          "404": {
            "description": "Something went wrong. Please consult the error message."
          }
        }
      }
    },
    "/type_by_view_class/": {
      "get": {
        "tags": ["Type Endpoints"],
        "description": "Retrieves a list of all system types",
        "operationId": "GetTypeByViewClass",
        "parameters": [
          {
            "name": "download",
            "in": "query",
            "description": "Download results",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of all OpenAtlas types",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TypesByViewClassModel"
                }
              }
            }
          },
          "404": {
            "description": "Something went wrong. Please consult the error message."
          }
        }
      }
    },
    "/classes/": {
      "get": {
        "tags": ["Administrative Endpoints"],
        "description": "Retrieves a list of all available classes, their CIDOC CRM mapping, their view, which icon can be used, if alias and references systems are allowed and which standard type it has.",
        "operationId": "ClassMapping",
        "responses": {
          "200": {
            "description": "List of all classes for presentation sites",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClassesModel"
                }
              }
            }
          },
          "404": {
            "description": "Something went wrong. Please consult the error message."
          }
        }
      }
    },
    "/content/": {
      "get": {
        "tags": ["Administrative Endpoints"],
        "description": "Retrieves a detailed list of information on available frontend content in an OpenAtlas instance - intro, legal notice, contact, and size of processed image",
        "operationId": "GetContent",
        "parameters": [
          {
            "name": "lang",
            "in": "query",
            "description": "Choose language",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "de",
              "enum": ["en", "de"]
            }
          },
          {
            "name": "download",
            "in": "query",
            "description": "Download results",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OpenAtlas Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentModel"
                }
              }
            }
          },
          "404": {
            "description": "Something went wrong. Please consult the error message."
          }
        }
      }
    },
    "/system_class_count/": {
      "get": {
        "tags": ["Administrative Endpoints"],
        "description": "Retrieves a detailed list of the numbers of entries connected to a system class",
        "operationId": "SystemClassCount",
        "responses": {
          "200": {
            "description": "System class count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemClassCountModel"
                }
              }
            }
          },
          "404": {
            "description": "Something went wrong. Please consult the error message."
          }
        }
      }
    },
    "/subunits/": {
      "get": {
        "tags": ["Special Endpoints"],
        "description": "Displays all subunits of a place in a special format as used by the THANADOS project. Can only be used for “places”. As format only XML can be chosen",
        "operationId": "GetSubunits",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "description": "Choose the format for the results.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "lp",
                "geojson",
                "geojson-v2",
                "pretty-xml",
                "n3",
                "turtle",
                "nt",
                "xml"
              ]
            },
            "example": "lp"
          },
          {
            "name": "download",
            "in": "query",
            "description": "Download results",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Just show count of how many entities would the result give back",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "One Place with all subunits",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubunitsModel"
                }
              }
            }
          },
          "404": {
            "description": "Something went wrong. Please consult the error message."
          }
        }
      }
    },
    "/geometric_entities/": {
      "get": {
        "tags": ["Special Endpoints"],
        "description": "Retrieve a GeoJSON of all chosen geometries in an OpenAtlas instance",
        "operationId": "GetGeometricEntities",
        "parameters": [
          {
            "name": "geometry",
            "in": "query",
            "description": "Filters which geometries will be received. Default is gisAll",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gisAll",
                  "gisPointAll",
                  "gisPointSupers",
                  "gisPointSubs",
                  "gisPointSibling",
                  "gisLineAll",
                  "gisPolygonAll"
                ]
              }
            }
          },
          {
            "name": "download",
            "in": "query",
            "description": "Download results",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Just show count of how many entities would the result give back",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All geometric entities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeometricEntitiesModel"
                }
              }
            }
          },
          "404": {
            "description": "Something went wrong. Please consult the error message."
          }
        }
      }
    },
    "/export_database/{format}": {
      "get": {
        "tags": ["Special Endpoints"],
        "description": "Downloads all information in an OpenAtlas instance as CSV, XML, or JSON.",
        "operationId": "ExportDatabase",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "enum": ["json", "csv", "xml"]
            },
            "example": "json"
          }
        ],
        "responses": {
          "200": {
            "description": "Downloads complete database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Something went wrong. Please consult the error message."
          }
        }
      }
    },
    "/display/{filename}": {
      "get": {
        "tags": ["Image Endpoints"],
        "description": "Retrieves the respective image if it has a licence.",
        "operationId": "DisplayImage",
        "parameters": [
          {
            "name": "filename",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieves the respective image if it has a licence",
            "content": {
              "image/jpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Something went wrong. Please consult the error message."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "EntitiesOutputModel": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationModel"
          },
          "results": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/LinkedPlacesModel"
                },
                {
                  "$ref": "#/components/schemas/GeoJSONModel"
                }
              ]
            }
          }
        }
      },
      "PaginationModel": {
        "type": "object",
        "properties": {
          "entities": {
            "type": "integer"
          },
          "entitiesPerPage": {
            "type": "integer"
          },
          "index": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaginationIndexModel"
            }
          },
          "totalPages": {
            "type": "integer"
          }
        }
      },
      "PaginationIndexModel": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer"
          },
          "startId": {
            "type": "integer"
          }
        }
      },
      "LinkedPlacesModel": {
        "properties": {
          "@context": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinkedPlacesModel_features"
            }
          }
        }
      },
      "GeoJSONModel": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["FeatureCollection"]
          },
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GeoJSONModel_features"
            }
          }
        }
      },
      "Point": {
        "required": ["coordinates", "type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["Point"]
          },
          "coordinates": {
            "$ref": "#/components/schemas/Position"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "shapeType": {
            "type": "string",
            "enum": ["centerpoint"]
          }
        }
      },
      "Position": {
        "maxItems": 3,
        "minItems": 2,
        "type": "array",
        "items": {
          "type": "number"
        }
      },
      "LineString": {
        "required": ["coordinates", "type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["LineString"]
          },
          "coordinates": {
            "$ref": "#/components/schemas/LineStringCoordinates"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "shapeType": {
            "type": "string",
            "enum": ["polyline"]
          }
        }
      },
      "LineStringCoordinates": {
        "minItems": 2,
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Position"
        }
      },
      "LinearRing": {
        "minItems": 4,
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Position"
        }
      },
      "Polygon": {
        "required": ["coordinates", "type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["Polygon"]
          },
          "coordinates'": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinearRing"
            }
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "shapeType": {
            "type": "string",
            "enum": ["area", "shape"]
          }
        }
      },
      "GeometryCollection": {
        "required": ["type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["GeometryCollection"]
          },
          "geometries": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Polygon"
                },
                {
                  "$ref": "#/components/schemas/Point"
                },
                {
                  "$ref": "#/components/schemas/LineString"
                }
              ]
            }
          }
        },
        "discriminator": {
          "propertyName": "type"
        }
      },
      "TypeOverviewEntryModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "viewClass": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypeOverviewEntryModel"
            }
          }
        }
      },
      "TypeOverviewModel": {
        "type": "object",
        "properties": {
          "standard": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypeOverviewEntryModel"
            }
          },
          "place": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypeOverviewEntryModel"
            }
          },
          "custom": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypeOverviewEntryModel"
            }
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypeOverviewEntryModel"
            }
          },
          "system": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypeOverviewEntryModel"
            }
          }
        }
      },
      "TypeTreeModel": {
        "type": "object",
        "properties": {
          "type_tree": {
            "$ref": "#/components/schemas/TypeTreeModel_type_tree"
          }
        }
      },
      "TypeViewClassChildren": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypeViewClassChildren"
            }
          }
        }
      },
      "TypesByViewClassEntry": {
        "type": "object",
        "properties": {
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypeViewClassChildren"
            }
          },
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string"
          }
        }
      },
      "TypesByViewClassModel": {
        "type": "object",
        "properties": {
          "acquisition": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypesByViewClassEntry"
            }
          },
          "activity": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypesByViewClassEntry"
            }
          },
          "actor_actor_relation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypesByViewClassEntry"
            }
          },
          "actor_function": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypesByViewClassEntry"
            }
          },
          "artifact": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypesByViewClassEntry"
            }
          },
          "bibliography": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypesByViewClassEntry"
            }
          },
          "edition": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypesByViewClassEntry"
            }
          },
          "event": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypesByViewClassEntry"
            }
          },
          "external_reference": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypesByViewClassEntry"
            }
          },
          "feature": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypesByViewClassEntry"
            }
          },
          "file": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypesByViewClassEntry"
            }
          },
          "group": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypesByViewClassEntry"
            }
          },
          "human_remains": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypesByViewClassEntry"
            }
          },
          "involvement": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypesByViewClassEntry"
            }
          },
          "move": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypesByViewClassEntry"
            }
          },
          "person": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypesByViewClassEntry"
            }
          },
          "place": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypesByViewClassEntry"
            }
          },
          "production": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypesByViewClassEntry"
            }
          },
          "source": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypesByViewClassEntry"
            }
          },
          "source_translation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypesByViewClassEntry"
            }
          },
          "stratigraphic_unit": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypesByViewClassEntry"
            }
          }
        }
      },
      "ClassesModel": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClassesModel_inner"
        }
      },
      "ContentModel": {
        "type": "object",
        "properties": {
          "intro": {
            "type": "string"
          },
          "contact": {
            "type": "string"
          },
          "legalNotice": {
            "type": "string"
          },
          "siteName": {
            "type": "string"
          },
          "imageSizes": {
            "$ref": "#/components/schemas/ContentModel_imageSizes"
          }
        }
      },
      "SystemClassCountModel": {
        "type": "object",
        "properties": {
          "move": {
            "type": "integer",
            "format": "int32"
          },
          "bibliography": {
            "type": "integer",
            "format": "int32"
          },
          "person": {
            "type": "integer",
            "format": "int32"
          },
          "acquisition": {
            "type": "integer",
            "format": "int32"
          },
          "reference_system": {
            "type": "integer",
            "format": "int32"
          },
          "feature": {
            "type": "integer",
            "format": "int32"
          },
          "file": {
            "type": "integer",
            "format": "int32"
          },
          "activity": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "integer",
            "format": "int32"
          },
          "administrative_unit": {
            "type": "integer",
            "format": "int32"
          },
          "artifact": {
            "type": "integer",
            "format": "int32"
          },
          "source_translation": {
            "type": "integer",
            "format": "int32"
          },
          "place": {
            "type": "integer",
            "format": "int32"
          },
          "stratigraphic_unit": {
            "type": "integer",
            "format": "int32"
          },
          "edition": {
            "type": "integer",
            "format": "int32"
          },
          "group": {
            "type": "integer",
            "format": "int32"
          },
          "source": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SubunitsModel": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SubunitsModel_inner"
        }
      },
      "GeometricEntitiesModel": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GeometricEntitiesModel_features"
            }
          }
        }
      },
      "inline_response_200": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/LinkedPlacesModel"
          },
          {
            "$ref": "#/components/schemas/GeoJSONModel"
          }
        ]
      },
      "LinkedPlacesModel_properties": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          }
        }
      },
      "LinkedPlacesModel_descriptions": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        }
      },
      "LinkedPlacesModel_when_start": {
        "type": "object",
        "properties": {
          "earliest": {
            "type": "string",
            "format": "nullable"
          },
          "latest": {
            "type": "string",
            "format": "nullable"
          },
          "comment": {
            "type": "string",
            "format": "nullable"
          }
        }
      },
      "LinkedPlacesModel_when_timespans": {
        "type": "object",
        "properties": {
          "start": {
            "$ref": "#/components/schemas/LinkedPlacesModel_when_start"
          },
          "end": {
            "$ref": "#/components/schemas/LinkedPlacesModel_when_start"
          }
        }
      },
      "LinkedPlacesModel_when": {
        "type": "object",
        "properties": {
          "timespans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinkedPlacesModel_when_timespans"
            }
          }
        }
      },
      "LinkedPlacesModel_types": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "descriptions": {
            "type": "string",
            "format": "nullable"
          },
          "hierarchy": {
            "type": "string"
          },
          "value": {
            "type": "number",
            "format": "float"
          },
          "unit": {
            "type": "string",
            "format": "nullable"
          }
        }
      },
      "LinkedPlacesModel_relations": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "relationTo": {
            "type": "string"
          },
          "relationType": {
            "type": "string"
          },
          "relationSystemClass": {
            "type": "string"
          },
          "relationDescription": {
            "type": "string",
            "format": "nullable"
          },
          "type": {
            "type": "string",
            "format": "nullable"
          },
          "when": {
            "$ref": "#/components/schemas/LinkedPlacesModel_when"
          }
        }
      },
      "LinkedPlacesModel_features": {
        "type": "object",
        "properties": {
          "@id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "crmClass": {
            "type": "string"
          },
          "systemClass": {
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/LinkedPlacesModel_properties"
          },
          "descriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinkedPlacesModel_descriptions"
            }
          },
          "when": {
            "$ref": "#/components/schemas/LinkedPlacesModel_when"
          },
          "types": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinkedPlacesModel_types"
            }
          },
          "relations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinkedPlacesModel_relations"
            }
          },
          "names": {
            "type": "string",
            "format": "nullable"
          },
          "links": {
            "type": "string",
            "format": "nullable"
          },
          "depictions": {
            "type": "string",
            "format": "nullable"
          },
          "geometry": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Polygon"
              },
              {
                "$ref": "#/components/schemas/Point"
              },
              {
                "$ref": "#/components/schemas/LineString"
              },
              {
                "$ref": "#/components/schemas/GeometryCollection"
              }
            ]
          }
        }
      },
      "GeoJSONModel_properties_types": {
        "type": "object",
        "properties": {
          "typeName": {
            "type": "string"
          },
          "typeId": {
            "type": "integer"
          }
        }
      },
      "GeoJSONModel_properties": {
        "type": "object",
        "properties": {
          "@id": {
            "type": "integer"
          },
          "systemClass": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "begin_earliest": {
            "type": "string"
          },
          "begin_latest": {
            "type": "string",
            "format": "nullable"
          },
          "begin_comment": {
            "type": "string",
            "format": "nullable"
          },
          "end_earliest": {
            "type": "string"
          },
          "end_latest": {
            "type": "string",
            "format": "nullable"
          },
          "end_comment": {
            "type": "string",
            "format": "nullable"
          },
          "types": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GeoJSONModel_properties_types"
            }
          }
        }
      },
      "GeoJSONModel_features": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "geometry": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Polygon"
              },
              {
                "$ref": "#/components/schemas/Point"
              },
              {
                "$ref": "#/components/schemas/LineString"
              },
              {
                "$ref": "#/components/schemas/GeometryCollection"
              }
            ]
          },
          "properties": {
            "$ref": "#/components/schemas/GeoJSONModel_properties"
          }
        }
      },
      "TypeTreeModel_type_tree_type_ids": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "origin_id": {
            "type": "integer"
          },
          "first": {
            "type": "integer"
          },
          "last": {
            "type": "integer"
          },
          "root": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "subs": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "count": {
            "type": "integer"
          },
          "count_subs": {
            "type": "integer"
          },
          "category": {
            "type": "string"
          }
        }
      },
      "TypeTreeModel_type_tree": {
        "type": "object",
        "properties": {
          "type_ids": {
            "$ref": "#/components/schemas/TypeTreeModel_type_tree_type_ids"
          }
        }
      },
      "ClassesModel_inner": {
        "type": "object",
        "properties": {
          "systemClass": {
            "type": "string"
          },
          "crmClass": {
            "type": "string"
          },
          "view": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "en": {
            "type": "string"
          }
        }
      },
      "ContentModel_imageSizes": {
        "type": "object",
        "properties": {
          "thumbnail": {
            "type": "string"
          },
          "table": {
            "type": "string"
          }
        }
      },
      "SubunitsModel_inner": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "parentId": {
            "type": "integer",
            "format": "int32"
          },
          "rootId": {
            "type": "integer",
            "format": "int32"
          },
          "openatlasClassName": {
            "type": "string"
          },
          "crmClass": {
            "type": "string"
          },
          "created": {
            "type": "string"
          },
          "modified": {
            "type": "string"
          },
          "latestModRec": {
            "type": "string"
          },
          "geometry": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "coordinates": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              },
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "shapeType": {
                "type": "string"
              }
            }
          },
          "children": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "properties": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "aliases": {
                "type": "string",
                "format": "nullable"
              },
              "description": {
                "type": "string"
              },
              "standardType": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "rootId": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "path": {
                    "type": "string"
                  },
                  "externalReferences": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "identifier": {
                          "type": "string"
                        },
                        "referenceSystem": {
                          "type": "string"
                        },
                        "resolverURL": {
                          "type": "string"
                        },
                        "referenceURL": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "timespan": {
                "type": "object",
                "properties": {
                  "earliestBegin": {
                    "type": "string"
                  },
                  "latestBegin": {
                    "type": "string"
                  },
                  "earliestEnd": {
                    "type": "string"
                  },
                  "latestEnd": {
                    "type": "string"
                  }
                }
              },
              "externalReferences": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "identifier": {
                      "type": "string"
                    },
                    "referenceSystem": {
                      "type": "string"
                    },
                    "resolverURL": {
                      "type": "string"
                    },
                    "referenceURL": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              },
              "references": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "abbreviation": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "pages": {
                      "type": "string",
                      "format": "nullable"
                    }
                  }
                }
              },
              "files": {
                "type": "string",
                "format": "nullable"
              },
              "types": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "rootId": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "name": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string",
                      "format": "nullable"
                    },
                    "unit": {
                      "type": "string",
                      "format": "nullable"
                    },
                    "externalReferences": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "identifier": {
                            "type": "string"
                          },
                          "referenceSystem": {
                            "type": "string"
                          },
                          "resolverURL": {
                            "type": "string"
                          },
                          "referenceURL": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "GeometricEntitiesModel_geometry": {
        "type": "object",
        "properties": {
          "coordinates": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "type": {
            "type": "string"
          }
        }
      },
      "GeometricEntitiesModel_properties": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "objectDescription": {
            "type": "string"
          },
          "objectName": {
            "type": "string"
          },
          "objectType": {
            "type": "string"
          },
          "shapeType": {
            "type": "string"
          }
        }
      },
      "GeometricEntitiesModel_features": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "geometry": {
            "$ref": "#/components/schemas/GeometricEntitiesModel_geometry"
          },
          "properties": {
            "$ref": "#/components/schemas/GeometricEntitiesModel_properties"
          }
        }
      }
    },
    "parameters": {
      "entityId": {
        "name": "entityId",
        "in": "path",
        "description": "Specific entity ID",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "integer"
        },
        "example": 40
      },
      "cidoc_class": {
        "name": "cidoc_class",
        "in": "path",
        "description": "CIDOC class to be requested",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string",
          "enum": [
            "E6",
            "E7",
            "E8",
            "E9",
            "E12",
            "E18",
            "E20",
            "E21",
            "E22",
            "E31",
            "E32",
            "E33",
            "E41",
            "E53",
            "E54",
            "E55",
            "E74"
          ]
        },
        "example": "E18"
      },
      "view_class": {
        "name": "view_class",
        "in": "path",
        "description": "View class to be requested",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string",
          "enum": [
            "all",
            "actor",
            "artifact",
            "event",
            "place",
            "reference",
            "source",
            "artifact",
            "type",
            "file",
            "source_translation",
            "reference_system"
          ]
        },
        "example": "actor"
      },
      "system_class": {
        "name": "system_class",
        "in": "path",
        "description": "System class to be requested",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string",
          "enum": [
            "all",
            "acquisition",
            "activity",
            "administrative_unit",
            "appellation",
            "artifact",
            "bibliography",
            "edition",
            "event",
            "external_reference",
            "feature",
            "file",
            "group",
            "human_remains",
            "move",
            "object_location",
            "person",
            "place",
            "production",
            "reference_system",
            "source",
            "source_translation",
            "stratigraphic_unit",
            "type",
            "type_anthropology"
          ]
        },
        "example": "acquisition"
      },
      "download": {
        "name": "download",
        "in": "query",
        "description": "Download results",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "boolean"
        }
      },
      "count": {
        "name": "count",
        "in": "query",
        "description": "Just show count of how many entities would the result give back",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "boolean"
        }
      },
      "lang": {
        "name": "lang",
        "in": "query",
        "description": "Choose language",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "example": "de",
          "enum": ["en", "de"]
        }
      },
      "show": {
        "name": "show",
        "in": "query",
        "description": "Select which keys should not be displayed. This can improve performance",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "when",
              "types",
              "relations",
              "names",
              "links",
              "geometry",
              "depictions",
              "geonames",
              "description",
              "none"
            ]
          }
        }
      },
      "sort": {
        "name": "sort",
        "in": "query",
        "description": "Sorting result ascending or descending of the given column. Default value is asc.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "enum": ["asc", "desc"]
        },
        "example": "asc"
      },
      "column": {
        "name": "column",
        "in": "query",
        "description": "Choose one column to sort the results by. Default value is name.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "enum": [
            "id",
            "name",
            "cidoc_class",
            "system_class",
            "begin_from",
            "begin_to",
            "end_from",
            "end_to"
          ]
        },
        "example": "name"
      },
      "search": {
        "name": "search",
        "in": "query",
        "description": "Search query for specific results.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "limit": {
        "name": "limit",
        "in": "query",
        "description": "Limits the entities displayed. Influences the performance of the request. Default value is 20. 0 means all available entities will be displayed.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer"
        }
      },
      "first": {
        "name": "first",
        "in": "query",
        "description": "Begin results at the given entity id.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer"
        }
      },
      "last": {
        "name": "last",
        "in": "query",
        "description": "Begin results after the given entity id.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer"
        }
      },
      "page": {
        "name": "page",
        "in": "query",
        "description": "Jump to page number.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer"
        }
      },
      "export": {
        "name": "export",
        "in": "query",
        "description": "Export the entities into either a simple CSV representation or a zip file of CSV's especially designed for network analyses.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "enum": ["csv", "csvNetwork"]
        }
      },
      "format": {
        "name": "format",
        "in": "query",
        "description": "Choose the format for the results.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "enum": [
            "lp",
            "geojson",
            "geojson-v2",
            "pretty-xml",
            "n3",
            "turtle",
            "nt",
            "xml"
          ]
        },
        "example": "lp"
      },
      "type_id": {
        "name": "type_id",
        "in": "query",
        "description": "Show only entities with the given type id.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      },
      "relation_type": {
        "name": "relation_type",
        "in": "query",
        "description": "Displays only connections connected by the selected CIDOC CRM code.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "geometry": {
        "name": "geometry",
        "in": "query",
        "description": "Filters which geometries will be received. Default is gisAll",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "gisAll",
              "gisPointAll",
              "gisPointSupers",
              "gisPointSubs",
              "gisPointSibling",
              "gisLineAll",
              "gisPolygonAll"
            ]
          }
        }
      },
      "entities": {
        "name": "entities",
        "in": "query",
        "description": "Entity ids which will be requested",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      },
      "cidoc_classes": {
        "name": "cidoc_classes",
        "in": "query",
        "description": "CIDOC classes to be requested",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "E6",
              "E7",
              "E8",
              "E9",
              "E12",
              "E18",
              "E20",
              "E21",
              "E22",
              "E31",
              "E32",
              "E33",
              "E41",
              "E53",
              "E54",
              "E55",
              "E74"
            ]
          }
        },
        "example": "E18"
      },
      "view_classes": {
        "name": "view_classes",
        "in": "query",
        "description": "View classes to be requested",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "all",
              "actor",
              "artifact",
              "event",
              "place",
              "reference",
              "source",
              "artifact",
              "type",
              "file",
              "source_translation",
              "reference_system"
            ]
          }
        },
        "example": "actor"
      },
      "system_classes": {
        "name": "system_classes",
        "in": "query",
        "description": "System classes to be requested",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "all",
              "acquisition",
              "activity",
              "administrative_unit",
              "appellation",
              "artifact",
              "bibliography",
              "edition",
              "event",
              "external_reference",
              "feature",
              "file",
              "group",
              "human_remains",
              "move",
              "object_location",
              "person",
              "place",
              "production",
              "reference_system",
              "source",
              "source_translation",
              "stratigraphic_unit",
              "type",
              "type_anthropology"
            ]
          }
        }
      },
      "image_size": {
        "name": "image_size",
        "in": "query",
        "description": "Select which size of the image you want to display. Values are fixed but can be changed for each OpenAtlas instance. Thumbnail is 200px and table 100px.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "enum": ["thumbnail", "table"]
        },
        "example": "table"
      }
    }
  }
}
